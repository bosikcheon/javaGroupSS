<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.javaGroupS.dao.BoardDAO">

	<select id="getTotRecCnt" resultType="int">
		select count(*) from board;
	</select>
	
	<select id="getTotRecCntSearch" resultType="int">
	<!-- 
	  <if test='search="title"'>
			select count(*) from board where title=#{search} and title like concat('%',#{searchString},'%');
		</if>
	 -->	
		select count(*) from board where ${search} like concat("%",#{searchString},"%");
	</select>
	
	<select id="getBoardList" resultType="com.spring.javaGroupS.vo.BoardVO">
		select b.*,datediff(wDate, now()) as date_diff,
		  timestampdiff(hour, wDate, now()) as time_diff,
		  (select count(idx) from boardReply2 where boardIdx=b.idx) as replyCnt
		  from board b order by idx desc limit #{startIndexNo},#{pageSize};
	</select>
	
	<select id="getBoardListSearch" resultType="com.spring.javaGroupS.vo.BoardVO">
		select b.*,datediff(wDate, now()) as date_diff,
		  timestampdiff(hour, wDate, now()) as time_diff,
		  (select count(idx) from boardReply2 where boardIdx=b.idx) as replyCnt
			from board b where ${search} like concat("%",#{searchString},"%") order by idx desc limit #{startIndexNo},#{pageSize};
	</select>
	
	<select id="getBoardContent" resultType="com.spring.javaGroupS.vo.BoardVO">
		select * from board where idx = #{idx};
	</select>
	
	<select id="getRecentCnt" resultType="int">
		select count(*) from board where wDate >= date_sub(now(), interval 7 day);
	</select>

	<select id="getPreNextSearch" resultType="com.spring.javaGroupS.vo.BoardVO">
		select idx, title from board where 
		<if test='str == "preVO"'> <![CDATA[idx < #{idx}]]> </if> 
		<if test='str != "preVO"'> <![CDATA[idx > #{idx}]]> </if> 
		order by idx <if test='str == "preVO"'> desc </if> limit 1;
	</select>
	
	<select id="getBoardParentReplyCheck" resultType="com.spring.javaGroupS.vo.BoardReply2VO">
		select * from boardReply2 where boardIdx = #{boardIdx} order by re_order desc limit 1;
	</select>
	
	<select id="getBoardReplyList" resultType="com.spring.javaGroupS.vo.BoardReply2VO">
		select * from boardReply2 where boardIdx = #{idx} order by re_order;
	</select>
	
	<select id="getIdxRefSearch" resultType="int">
		select count(*) from boardRePly2 where ref = #{idx};
	</select>
	
	<select id="getBoardReplyRefSearch" resultType="int">
		select count(*) from boardRePly2 where ref = #{ref};
	</select>
	
	<select id="getBoardReplyParentRefSearch" resultType="int">
		select ref from boardRePly2 where idx = #{idx};
	</select>
	
	<select id="getBoardReplyNickName" resultType="com.spring.javaGroupS.vo.BoardReply2VO">
		select * from boardRePly2 where idx = #{ref};
	</select>
	


	<insert id="setBoardInput">
	  insert into board values (default,#{vo.mid},#{vo.nickName},#{vo.title},#{vo.content},#{vo.hostIp},#{vo.openSw},default,default,default,default);
	</insert>
	
	<insert id="setBoardReplyInput">
	  insert into boardReply2 values (default,#{replyVO.boardIdx},#{replyVO.ref},#{replyVO.re_step},#{replyVO.re_order},#{replyVO.mid},#{replyVO.nickName},#{replyVO.content},#{replyVO.hostIp},default);
	</insert>
	<!-- 
	<insert id="setBoardReplyInputRe">
		insert into boardReply2 values (default,#{replyVO.boardIdx},#{replyVO.re_step},#{replyVO.re_order},#{replyVO.mid},#{replyVO.nickName},#{replyVO.content},#{replyVO.hostIp},default);
	</insert>
	 -->
	
	
	<update id="setReadNumPlus">
	  update board set readNum = readNum + 1 where idx = #{idx};
	</update>
	
	<update id="setBoardUpdateOk">
		update board set title=#{vo.title},content=#{vo.content},hostIp=#{vo.hostIp},openSw=#{vo.openSw},wDate=now() where idx=#{vo.idx};
	</update>
	
	<update id="setBoardGood">
	  update board set good = good + 1 where idx = #{idx};
	</update>
	
	<update id="setBoardGood2">
	  update board set good = good + #{goodCnt} where idx = #{idx};
	</update>
	
	<update id="setReplyOrderUpdate">
	  update boardReply2 set re_order = re_order + 1 where boardIdx = #{boardIdx} and re_order > #{re_order};
	</update>
	
	<update id="setBoardReplyUpdate">
	  update boardReply2 set content = #{replyVO.content}, hostIp =  #{replyVO.hostIp}, wDate = now() where idx = #{replyVO.idx};
	</update>
	
	<update id="setBoardReplyDeleteCheck">
	  update boardReply2 set nickName = '-', content = '삭제된 글입니다.' where idx = #{idx};
	</update>
	
	
	
	<delete id="setBoardDelete">
		delete from board where idx = #{idx};
	</delete>
	
	<delete id="setBoardReplyDelete">
	  delete from boardReply2 where idx = #{idx};
	</delete>

</mapper>